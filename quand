#!/bin/sh

VERSION="0.2"
CONF="${XDG_CONFIG_HOME:-$HOME/.config}/quand/config"

language="${LANG:-en_US.utf-8}"
calendar="${XDG_DATA_HOME:-$HOME/.local/share}/quand/calendar"
editor="${EDITOR:-vi}"
header=1
past=-1
future=14
yesterday="yesterday  "
today="\033[1mtoday      "
tomorrow="tomorrow   "
special="special   "
spaces="        "
mondayfirst=0

getday() {
	date --date="$1 day" "+%m %d"
}

getnameday() {
	LC_ALL="$language" date --date="$1 day" "+%a$spaces"
}

printspecial() {
	for line in $calendar; do
		case $line in
		"* * *"*)
			printf "$special\033[m%s\n" "${line#"* * *"}" ;;
		esac
	done
}

print() {
	for line in $calendar; do
		case $line in
		"$year $1"*|"* $1"*)
			printf "$2\033[m%s\n" "$line" ;;
		esac
	done
}


usage() {
	printf 'Usage: %s [options]

Options:
no option             | Default
-h|--help             â”‚ Print this help message and exit
-v|--version          | Print the version
-p|--past             | Temporarily change past
-f|--future           | Temporarily change future
                      |
e|edit                | Edit the calendar file
c|cal [n]             | Print a calendar with 1 or n months

Have a look at the README for more information about the configuration.\n' "${0##*/}" 1>&2

}

calendar() {
	if [ "$mondayfirst" -eq 1 ]; then
		LC_ALL="$language" cal -m -n "${1:-1}"
	else
		LC_ALL="$language" cal -s -n "${1:-1}"
	fi
}

main() {
	[ -f "$CONF" ] && . "$CONF"

	case $1 in
	-v|--version)
		printf '%s %s\n' "${0##*/}" "$VERSION" 1>&2
	 	return 0 ;;
	-h|--help)
		usage
		return 0 ;;
	e|edit)
		"$editor" "$calendar"
		return ;;
	c|cal)
		calendar "$2"
		return ;;
	-p|--past)
		past="$2"
		exec ;;
	-f|--future)
		future="$2"
		exec ;;
	'')
		exec ;;
	*)
		printf 'Error: unknown option %s\n' "$*" 1>&2
		usage
		return 1 ;;
	esac

	[ ! -f "$calendar" ] &&
		printf 'Error: %s is not a valid file\n' "$calendar" 1>&2 &&
		return 1

	calendar="$(sort "$calendar")"
	IFS=$(printf '\n\b')

	year="$(date "+%Y")" # this is inaccurate

	[ "$header" = 1 ] && printf '%s\n\n' "$(LC_ALL="$language" date)"

	while [ "$past" -lt -1 ]; do
		print "$(getday "$past")" "$(getnameday "$past")"
		past=$((past+1))
	done

	[ "$past" -eq -1 ] && print "$(getday "-1")" "$yesterday"

	print "$(getday 0)" "$today"

	[ "$future" -ge 1 ] && print "$(getday "+1")" "$tomorrow"

	cpt=2
	while [ "$future" -gt 1 ]; do
		print "$(getday "+$cpt")" "$(getnameday "+$cpt")"
		future="$((future-1))"
		cpt="$((cpt+1))"
	done

	printspecial

	return 0
}

main "$@"

